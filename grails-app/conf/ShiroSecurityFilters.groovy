import com.thehuxley.PermissionHandler

/**
 * Generated by the Shiro plugin. This filters class protects all URLs
 * via access control by convention.
 */
class ShiroSecurityFilters {
    def filters = {
        all(uri: "/**") {
            before = {
                def permissionHandler = PermissionHandler.getInstance()
                def license = session['license']

                if (license) {
                    if (controllerName == 'auth' && (actionName == 'login' || actionName == 'landing')) {
                        redirect(controller: 'home', action: 'index')
                    }

                    if (license.type && permissionHandler.checkPermission(license.type.descriptor, controllerName, actionName)) {
                        return true
                    } else {
                        redirect(controller: "auth", action: 'unauthorized')
                        return false
                    }
                } else if (controllerName != 'auth') {
                    if (!permissionHandler.checkPermission(controllerName, actionName)) {
                        params.targetUri = request.forwardURI.replace(request.contextPath, "")
                        if (request.queryString) {
							params.targetUri += "?" +  request.queryString
						}
                        params.id = null
                        redirect(controller: "auth", action: "login", params:params)
                        return false
                    }
                    return true
                } else if (controllerName == 'auth') {
                    return true
                }
                return false
            }
        }
    }
}
